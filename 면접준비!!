📍 자바의 기본 과정
  = 데이터형 / 변수 / 연산자 / 제어문 / 배열(1차)
  = 객체지향프로그램(클래스 및 객체 개념), 객체지향프로그램의 3대요소(캡슐화,상속,포함,다형성_오버라이딩,오버로딩)
    🤔 캡술화 vs 은닉화
    🫠 상속 vs 포함
    🤔 오버라이딩 vs 오버로딩
  = 추상클래스 / 인터페이스
    🤔 추상클래스 vs 인터페이스
    🤧 인터페이스의 장점은? (왜 인터페이스를 사용하나요?)
  = 예외처리
    🤔 예외처리의 목적이 무엇인가요? _ 사전에 에러를 방지하는 목적/프로그램이 종료되지 않게 하려는 목적
  = 라이브러리(java.lang, java.util)
    - Collection, 제네릭스
    🤔 Collection과 제네릭스에 대해서 설명하세요.
    - IO

📍 오라클
  = DQL (SELECT) => JOIN/SubQuery
    🤔 JOIN의 종류 / SubQuery의 종류
  = DML (INSERT, UPDATE, DELETE)
  = DDL (CREATE, ALTER, DROP, TRUCATE) => 제약조건
    🫠 제약조건에 대해서 설명해보세요.
  = TCL (COMMIT, ROLLBACK)
  = PL/SQL (프로시저)
    🤔 프로시저 vs 트리거 차이점
  = JDBC (DBCP/ORM-MyBatis,JPA)
    🫠 DAO vs Service

📍 HTML5/CSS
  = 약간의 수정 / 태그 등
    🤔 GET vs POST

📍 JavaScript
  = 기본
  = 변수설정(let, const)
  = 제어문 / 연산자
  = function()
  = event
  = 태그제어(DOM)
  = 라이브러리 (JQuery,VueJS,React)
   🤔 let vs var vs const 차이점
   🤧 클로저
   🤔 prototype
   🫠 VueJS vs React
   
📍 JSP
  = 지시자
    - page,taglib
  = 내장객체
    - request, response,session,application
  = action tag
    - <jsp:include>
  = taglib (<c:~~>)
  = EL (${})
  = MVC
    🤔 MVC 구조(동작)
  
📍 Spring
  = DI
  = AOP
  = MVC
  + option(websocket,task,security,spring-boot)
    🫠 DI
    🤔 AOP
  
📍 AWS
  = hosting
